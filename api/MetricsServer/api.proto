syntax = "proto3";

package MetricsServer;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

option go_package = "pkg/grpc-metrics";

service MetricsService {
  rpc GetMetric(GetMetricRequest) returns (GetMetricResponse) {
    option (google.api.http) = {
      get: "/api/v1/value/{type}/{id}"
    };
  }

  rpc GetAllMetrics(google.protobuf.Empty) returns (GetAllMetricsResponse) {
    option (google.api.http) = {
      get: "/api/v1/"
    };
  }

  rpc UpdateMetric(UpdateMetricRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/update/{metric.m_type}/{metric.id}/{metric_value}"
      body: "*"
    };
  }

  rpc UpdateMetrics(UpdateMetricsRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/api/v1/updates/"
      body: "*"
    };
  }

  rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get: "/api/v1/ping"
    };
  }
}

message Metric {
  string id = 1;
  string m_type = 2;
  oneof metric_value {
    int64 delta = 3;
    double value = 4;
  }
}

message GetMetricRequest {
  string id = 1;
  string type = 2;
}

message GetMetricResponse {
  Metric metric = 1;
}

message GetAllMetricsResponse {
  repeated Metric metrics = 1;
}

message UpdateMetricRequest {
  Metric metric = 1;
}

message UpdateMetricsRequest {
  repeated Metric metrics = 1;
}
