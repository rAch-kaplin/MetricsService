// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Get all metrics",
                "tags": [
                    "metrics"
                ],
                "responses": {
                    "200": {
                        "description": "Metrics table",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Metrics not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Check if the database is reachable",
                "tags": [
                    "metrics"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Database connection failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/update": {
            "post": {
                "description": "Update a metric by type and name",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid JSON body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Metric not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/update/{mType}/{mName}/{mValue}": {
            "post": {
                "description": "Update a metric by type, name and value from URL parameters",
                "tags": [
                    "metrics"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metric type",
                        "name": "mType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metric name",
                        "name": "mName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metric value",
                        "name": "mValue",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metric updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid metric value or name not specified",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/updates": {
            "post": {
                "description": "Update a list of metrics",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "responses": {
                    "200": {
                        "description": "Metrics updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/value": {
            "post": {
                "description": "Get a metric by type and name",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "responses": {
                    "400": {
                        "description": "Invalid JSON body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Metric not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/value/{mType}/{mName}": {
            "get": {
                "description": "Get a metric by type and name from URL parameters",
                "tags": [
                    "metrics"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Metric type",
                        "name": "mType",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metric name",
                        "name": "mName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metric value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Metric not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
